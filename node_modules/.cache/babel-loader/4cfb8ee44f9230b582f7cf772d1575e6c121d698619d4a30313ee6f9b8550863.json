{"ast":null,"code":"import React from\"react\";import User from\"./User\";import{jsx as _jsx}from\"react/jsx-runtime\";class Users extends React.Component{constructor(props){//для записи состояний\nsuper(props);// обязательная строка\nthis.state={users:[//в таком варианте сам массив является состоянием\n{// это массив, в котором есть 2 объекта\nid:1,/*id, Name и пр. это ключи*/Name:'Tommas',Surname:'Bang',Email:'tombang@yandex.ru',Age:34,Married:true},{id:2,Name:'Nickole',Surname:'Vee',Email:'nickkieV@yandex.ru',Age:19,Married:false}]};}render(){if(this.state.users.length>0)return/*#__PURE__*/_jsx(\"div\",{children:this.state.users.map(element=>/*#__PURE__*///this так как это class. Мы тут обращаемся к классу users и задаем метод map (заранее известную), чтобы перебрать массив users. \n_jsx(User,{}))});else return/*#__PURE__*/_jsx(\"div\",{className:\"usersEmpty\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"})});}}export default Users;","map":{"version":3,"names":["React","User","jsx","_jsx","Users","Component","constructor","props","state","users","id","Name","Surname","Email","Age","Married","render","length","children","map","element","className"],"sources":["C:/Users/Лилиана/Documents/z/react js/www/src/components/Users.js"],"sourcesContent":["import React from \"react\";\r\nimport User from \"./User\";\r\n\r\n\r\nclass Users extends React.Component {\r\n\r\n         constructor(props) { //для записи состояний\r\n                  super(props) // обязательная строка\r\n                  this.state = {\r\n                           users: [ //в таком варианте сам массив является состоянием\r\n                                    { // это массив, в котором есть 2 объекта\r\n                                             id: 1, /*id, Name и пр. это ключи*/ \r\n                                             Name: 'Tommas',\r\n                                             Surname: 'Bang',\r\n                                             Email: 'tombang@yandex.ru',\r\n                                             Age: 34,\r\n                                             Married: true\r\n                                    },\r\n                                    {\r\n                                             id: 2,\r\n                                             Name: 'Nickole',\r\n                                             Surname: 'Vee',\r\n                                             Email: 'nickkieV@yandex.ru',\r\n                                             Age: 19,\r\n                                             Married: false  \r\n                                     }\r\n                           ]\r\n                  }\r\n         }\r\n         \r\n    render() {\r\n\r\n         if(this.state.users.length > 0)\r\n\r\n         return (\r\n           <div>\r\n                  {this.state.users.map((element) => ( //this так как это class. Мы тут обращаемся к классу users и задаем метод map (заранее известную), чтобы перебрать массив users. \r\n                   <User />        \r\n                  ))}\r\n                   </div>)\r\n           else\r\n           return (\r\n                  <div className=\"usersEmpty\">\r\n                        <h3>Пользователей не найдено</h3>\r\n                  </div>\r\n                  )\r\n         }\r\n        }\r\n\r\n\r\n\r\nexport default Users"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAG1B,KAAM,CAAAC,KAAK,QAAS,CAAAJ,KAAK,CAACK,SAAU,CAE3BC,WAAWA,CAACC,KAAK,CAAE,CAAE;AACZ,KAAK,CAACA,KAAK,CAAC,CAAC;AACb,IAAI,CAACC,KAAK,CAAG,CACJC,KAAK,CAAE,CAAE;AACA,CAAE;AACOC,EAAE,CAAE,CAAC,CAAE,4BACPC,IAAI,CAAE,QAAQ,CACdC,OAAO,CAAE,MAAM,CACfC,KAAK,CAAE,mBAAmB,CAC1BC,GAAG,CAAE,EAAE,CACPC,OAAO,CAAE,IAClB,CAAC,CACD,CACSL,EAAE,CAAE,CAAC,CACLC,IAAI,CAAE,SAAS,CACfC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,oBAAoB,CAC3BC,GAAG,CAAE,EAAE,CACPC,OAAO,CAAE,KACjB,CAAC,CAEpB,CAAC,CACV,CAELC,MAAMA,CAAA,CAAG,CAEJ,GAAG,IAAI,CAACR,KAAK,CAACC,KAAK,CAACQ,MAAM,CAAG,CAAC,CAE9B,mBACEd,IAAA,QAAAe,QAAA,CACQ,IAAI,CAACV,KAAK,CAACC,KAAK,CAACU,GAAG,CAAEC,OAAO,eAAO;AACpCjB,IAAA,CAACF,IAAI,GAAE,CACP,CAAC,CACI,CAAC,CAAC,IAEf,oBACOE,IAAA,QAAKkB,SAAS,CAAC,YAAY,CAAAH,QAAA,cACrBf,IAAA,OAAAe,QAAA,CAAI,wIAAwB,CAAI,CAAC,CAClC,CAAC,CAEf,CACD,CAIR,cAAe,CAAAd,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}