{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041B\\u0438\\u043B\\u0438\\u0430\\u043D\\u0430\\\\Documents\\\\z\\\\react js\\\\www\\\\src\\\\components\\\\Users.js\";\nimport React from \"react\";\nimport User from \"./User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends React.Component {\n  render() {\n    if (this.props.users.length > 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.props.map(element =>\n      /*#__PURE__*/\n      //this так как это class. Мы тут обращаемся к классу users и задаем метод map (заранее известную), чтобы перебрать массив users. \n      _jsxDEV(User, {\n        user: element\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usersEmpty\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 19\n    }, this);\n  }\n}\nexport default Users;","map":{"version":3,"names":["React","User","jsxDEV","_jsxDEV","Users","Component","render","props","users","length","children","map","element","user","id","fileName","_jsxFileName","lineNumber","columnNumber","className"],"sources":["C:/Users/Лилиана/Documents/z/react js/www/src/components/Users.js"],"sourcesContent":["import React from \"react\";\r\nimport User from \"./User\";\r\n\r\n\r\nclass Users extends React.Component {\r\n\r\n         \r\n         \r\n    render() {\r\n\r\n         if(this.props.users.length > 0)\r\n\r\n         return (\r\n           <div>\r\n                  {this.props.map((element) => ( //this так как это class. Мы тут обращаемся к классу users и задаем метод map (заранее известную), чтобы перебрать массив users. \r\n                   <User key={element.id} user={element}/>        \r\n                  ))}\r\n                   </div>)\r\n           else\r\n           return (\r\n                  <div className=\"usersEmpty\">\r\n                        <h3>Пользователей не найдено</h3>\r\n                  </div>\r\n                  )\r\n         }\r\n        }\r\n\r\n\r\n\r\nexport default Users"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,KAAK,SAASJ,KAAK,CAACK,SAAS,CAAC;EAIhCC,MAAMA,CAAA,EAAG;IAEJ,IAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAE9B,oBACEN,OAAA;MAAAO,QAAA,EACQ,IAAI,CAACH,KAAK,CAACI,GAAG,CAAEC,OAAO;MAAA;MAAO;MAC9BT,OAAA,CAACF,IAAI;QAAkBY,IAAI,EAAED;MAAQ,GAA1BA,OAAO,CAACE,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,CAAC,KAEf,oBACOf,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAT,QAAA,eACrBP,OAAA;QAAAO,QAAA,EAAI;MAAwB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEf;AACD;AAIR,eAAed,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}